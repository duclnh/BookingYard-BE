// <auto-generated />
using System;
using Fieldy.BookingYard.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fieldy.BookingYard.Persistence.Migrations
{
    [DbContext(typeof(BookingYardDBContext))]
    [Migration("20240603184006_NewDatabase")]
    partial class NewDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fieldy.BookingYard.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("UserID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ExpirationResetToken")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("ResetToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Role")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "067427517b4a436f8dc05a678bbf22b4",
                            Address = "123 Main St, City, Country",
                            CreateBy = "067427517b4a436f8dc05a678bbf22b4",
                            CreateDate = new DateTime(2024, 6, 4, 1, 40, 6, 68, DateTimeKind.Local).AddTicks(7644),
                            Email = "john@example.com",
                            Gender = true,
                            Name = "John Doe",
                            PasswordHash = "$2a$10$OtTTdcHCfgYbdouDOccIr.AnkZHsZif3064o/vd1PQg1iQH5kZqJC",
                            Phone = "1234567890",
                            Point = 100,
                            Role = (short)4,
                            UpdateBy = "067427517b4a436f8dc05a678bbf22b4",
                            UpdateDate = new DateTime(2024, 6, 4, 1, 40, 6, 68, DateTimeKind.Local).AddTicks(7657),
                            UserName = "johndoe",
                            VerificationToken = "$2a$10$OtTTdcHCfgYbdouDOccIr.AnkZHsZif3064o/vd1PQg1iQH5kZqJC"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
