name: deploy-vps
on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - product
    
jobs:
  build:
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/product'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Setup code
        uses: actions/checkout@v4
      
      - name: Set Docker env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "${{ secrets.ENV_FILE_DEV }}" > .env
            echo "TAGS=${{ vars.VERSION_DEV }}" >> $GITHUB_ENV
          fi
      
      - name: Show .env content
        run: |
           cat .env
           
      - name: Build and push image
        uses: elgohr/Publish-Docker-Github-Action@v4
        with:
          name: ${{ vars.IMAGE_NAME }}
          registry: ${{ vars.CONTAINER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          tags: ${{ env.TAGS }}
          dockerfile: Dockerfile

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up container
        # id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "DOCKER_IMAGE=${{ vars.IMAGE_NAME }}:${{ vars.VERSION_DEV }}" >> $GITHUB_ENV
            echo "CONTAINER_NAME=${{ vars.CONTAINER_NAME_DEV }}" >> $GITHUB_ENV
            echo "CONTAINER_PORT=${{ vars.CONTAINER_PORT_DEV }}" >> $GITHUB_ENV
            echo "VOLUME=${{ vars.VOLUME_UPLOAD_FILE_DEV }}" >> $GITHUB_ENV
          fi

      - name: Deploy package to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login registry-1.docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            if [[ "$(sudo docker ps -aq -f name=${{ env.CONTAINER_NAME }})" ]]; then
              sudo docker stop ${{ env.CONTAINER_NAME }}
              sudo docker rm ${{ env.CONTAINER_NAME }}
            
            fi

            if [[ "$(sudo docker images -q ${{ env.DOCKER_IMAGE }})" ]]; then
              sudo docker rmi ${{ env.DOCKER_IMAGE }}
            fi

            sudo docker pull ${{ env.DOCKER_IMAGE }}
            sudo docker run -d --name ${{ env.CONTAINER_NAME }} --restart unless-stopped -v ${{ env.VOLUME }}:${{ vars.UPLOAD_FOLDER }} -p ${{ env.CONTAINER_PORT }}:${{ vars.PORT }} ${{ env.DOCKER_IMAGE }}
